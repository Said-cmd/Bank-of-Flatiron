{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/saidhussein/Desktop/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm({\n  transactions,\n  setTransactions\n}) {\n  _s();\n\n  //const [transactionData, setTransactionData] = useState([]);//\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  function handleOnChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    setFormData({ ...formData,\n      [name]: value\n    });\n    console.log(formData);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => r.json()).then(data => {\n      const newTransactionData = [...transactions, data];\n      setTransactions(newTransactionData);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"4cCi3zxBqH9+aGsYSxdD7JV7fAE=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/saidhussein/Desktop/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","transactions","setTransactions","formData","setFormData","date","description","category","amount","handleOnChange","e","name","target","value","console","log","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","data","newTransactionData"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAA5B,EAA8D;AAAA;;AAC5D;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACzCM,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,WAAW,EAAE,EAF4B;AAGzCC,IAAAA,QAAQ,EAAE,EAH+B;AAIzCC,IAAAA,MAAM,EAAE;AAJiC,GAAD,CAAxC;;AAMA,WAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAApB;AACA,QAAIE,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAArB;AACAT,IAAAA,WAAW,CAAE,EACX,GAAGD,QADQ;AACE,OAACQ,IAAD,GAAQE;AADV,KAAF,CAAX;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACD;;AACD,WAASa,YAAT,CAAsBN,CAAtB,EAAwB;AACtBA,IAAAA,CAAC,CAACO,cAAF;AACAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAepB,QAAf;AALoC,KAAvC,CAAL,CAOGqB,IAPH,CAOSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAPf,EAQGF,IARH,CAQSG,IAAD,IAAU;AAChB,YAAMC,kBAAkB,GAAG,CAAC,GAAG3B,YAAJ,EAAkB0B,IAAlB,CAA3B;AACAzB,MAAAA,eAAe,CAAC0B,kBAAD,CAAf;AACC,KAXH;AAYD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEZ,YAApC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,QAAQ,EAAEP;AAHV;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,aAFL;AAGA,UAAA,WAAW,EAAC,aAHZ;AAIA,UAAA,QAAQ,EAAEA;AAJV;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,UAFL;AAGA,UAAA,WAAW,EAAC,UAHZ;AAIA,UAAA,QAAQ,EAAEA;AAJV;AAAA;AAAA;AAAA;AAAA,gBAZF,eAkBE;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,IAAI,EAAC,QAFL;AAGA,UAAA,WAAW,EAAC,QAHZ;AAIA,UAAA,IAAI,EAAC,MAJL;AAKA,UAAA,QAAQ,EAAEA;AALV;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2BE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAnEQT,kB;;KAAAA,kB;AAqET,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTransactionForm({ transactions, setTransactions}) {\n  //const [transactionData, setTransactionData] = useState([]);//\n  const [formData, setFormData] = useState({\n  date: \"\",\n  description: \"\",\n  category: \"\",\n  amount: 0,\n})\n  function handleOnChange(e) {\n    let name = e.target.name\n    let value = e.target.value\n    setFormData ({  \n      ...formData, [name]: value\n    }); \n    console.log(formData)\n  }\n  function handleSubmit(e){\n    e.preventDefault()\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData)\n    })\n      .then((r) => r.json())\n      .then((data) => {\n      const newTransactionData = [...transactions, data] \n      setTransactions(newTransactionData)\n      })\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input \n          type=\"date\" \n          name=\"date\" \n          onChange={handleOnChange}\n          />\n          <input \n          type=\"text\" \n          name=\"description\" \n          placeholder=\"Description\" \n          onChange={handleOnChange}\n          />\n          <input \n          type=\"text\" \n          name=\"category\" \n          placeholder=\"Category\" \n          onChange={handleOnChange}\n          />\n          <input \n          type=\"number\" \n          name=\"amount\" \n          placeholder=\"Amount\" \n          step=\"0.01\" \n          onChange={handleOnChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"]},"metadata":{},"sourceType":"module"}